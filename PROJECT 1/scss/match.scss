$breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
);



$breakpoint: map-get($breakpoints, sm); // Get the small breakpoint.

$breakpoint: map-get($breakpoints, md); // Get the medium breakpoint.

$breakpoint: map-get($breakpoints, lg); // Get the large breakpoint.

$breakpoint: map-get($breakpoints, xl); // Get the xlarge breakpoint.

$breakpoint: map-get($breakpoints, xxl); // Get the extra extra large breakpoint.
  

@mixin respond-above($breakpoint) { 
  
  //respond above - breakpoints above designated value
  //respond below - breakpoints below designated value

    @if map-has-key($breakpoints, $breakpoint) {
  
      $breakpoint-value: map-get($breakpoints, $breakpoint);
  
      @media (min-width: $breakpoint-value) {
        @content;
      }
  
    } @else {
  
  
      @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
  }

  @include respond-above(sm) {
  
    .container .card{
      width: 100%;
      height: 100%;
      transition: transform 1500ms;
      transform-style: preserve-3d
    }

    .container:hover > .card{
      cursor: pointer;
      transform: rotateY("180deg");
    }
    
    .container .card .front, .back {
      height: 100%;
      width: 100%;
      border-radius: 2rem;
      box-shadow: 0 0 5px 2px rgb(50, 50, 0);
      position: absolute;
      backface-visibility: hidden;
    }
    
    .container .card .front {
      background-image: url("/dist/images/covered book.jpg");
      background-repeat: no-repeat;
      background-size: 350px 500px;
    }
    
    .container .card .back {
      background-color: white;
      transform: rotateY('180deg');
    }
   
    .carousel-slide .carousel-inner .carousel-item .card {
      margin:  0 .5em;
      height: 350px;
      width: 200px;
    }

    .cards-wrapper .card{
        display: flex;

    }

    .card-img-top{
        display: flex;

    }
    .footer {
      position: absolute;
      bottom: 0;
      padding:40px 0;
    }
    
    .footer .social {
      padding-bottom: 25px;
    }
    
    .social a{
      font-size: 25px;
      width: 30px;
      height: 40px;
      line-height: 40px;
      display: inline-block;
    }
    
    .social a:hover{
      opacity: 0.9;
    }
    
    .col ul {
      padding:40px;
      list-style: none;
      font-size: 20px;
      line-height: 2;
    }
    
    .col ul li a {
      color: inherit;
      text-decoration: none;
    }
    
  }

@mixin respond-below ($breakpoint){

  @if map-has-key($breakpoints, $breakpoint) {

    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  } @else {

    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@include respond-below(lg) {


  .container .card{
    width: 100%;
    height: 100%;
    transition: transform 1500ms;
    transform-style: preserve-3d
  }

  .container:hover > .card{
    cursor: pointer;
    transform: rotateY("180deg");
  }
  
  .container .card .front, .back {
    height: 100%;
    width: 100%;
    border-radius: 2rem;
    box-shadow: 0 0 5px 2px rgb(50, 50, 0);
    position: absolute;
    backface-visibility: hidden;
  }
  
  .container .card .front {
    background-image: url("/dist/images/covered book.jpg");
    background-repeat: no-repeat;
    background-size: 350px 500px;
  }
  
  .container .card .back {
    background-color: white;
    transform: rotateY('180deg');
  }
 
  .carousel-slide .carousel-inner .carousel-item .card {
    margin:  0 .5em;
    height: 350px;
    width: 200px;
  }

  .cards-wrapper .card{
      display: flex;

  }

  .card-img-top{
      display: flex;

  }
  .footer {
    position: absolute;
    bottom: 0;
    padding:40px 0;
  }
  
  .footer .social {
    padding-bottom: 25px;
  }
  
  .social a{
    font-size: 25px;
    width: 30px;
    height: 40px;
    line-height: 40px;
    display: inline-block;
  }
  
  .social a:hover{
    opacity: 0.9;
  }
  
  .col ul {
    padding:40px;
    list-style: none;
    font-size: 20px;
    line-height: 2;
  }
  
  .col ul li a {
    color: inherit;
    text-decoration: none;
  }
  

}


@mixin respond-between($lower, $upper) {

    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
  
      $lower-breakpoint: map-get($breakpoints, $lower);
      $upper-breakpoint: map-get($breakpoints, $upper);
  
      @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
        @content;
      }
    
    } @else {
  
      @if (map-has-key($breakpoints, $lower) == false) {
  
        @warn 'Your lower breakpoint was invalid: #{$lower}.';
      }
  
      @if (map-has-key($breakpoints, $upper) == false) {
  
        @warn 'Your upper breakpoint was invalid: #{$upper}.';
      }
    }
  }

  @include respond-between(sm, xxl) {
    .container .card{
      width: 100%;
      height: 100%;
      transition: transform 1500ms;
      transform-style: preserve-3d
    }

    .container:hover > .card{
      cursor: pointer;
      transform: rotateY("180deg");
    }
    
    .container .card .front, .back {
      height: 100%;
      width: 100%;
      border-radius: 2rem;
      box-shadow: 0 0 5px 2px rgb(50, 50, 0);
      position: absolute;
      backface-visibility: hidden;
    }
    
    .container .card .front {
      background-image: url("/dist/images/covered book.jpg");
      background-repeat: no-repeat;
      background-size: 350px 500px;
    }
    
    .container .card .back {
      background-color: white;
      transform: rotateY('180deg');
    }
   
    .carousel-slide .carousel-inner .carousel-item .card {
      margin:  0 .5em;
      height: 350px;
      width: 200px;
    }

    .cards-wrapper .card{
        display: flex;

    }

    .card-img-top{
        display: flex;

    }
    .footer {
      position: absolute;
      bottom: 0;
      padding:40px 0;
    }
    
    .footer .social {
      padding-bottom: 25px;
    }
    
    .social a{
      font-size: 25px;
      width: 30px;
      height: 40px;
      line-height: 40px;
      display: inline-block;
    }
    
    .social a:hover{
      opacity: 0.9;
    }
    
    .col ul {
      padding:40px;
      list-style: none;
      font-size: 20px;
      line-height: 2;
    }
    
    .col ul li a {
      color: inherit;
      text-decoration: none;
    }
    
    
    }

 
  