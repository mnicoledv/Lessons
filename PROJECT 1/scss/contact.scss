$breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
);



$breakpoint: map-get($breakpoints, sm); // Get the small breakpoint.

$breakpoint: map-get($breakpoints, md); // Get the medium breakpoint.

$breakpoint: map-get($breakpoints, lg); // Get the large breakpoint.

$breakpoint: map-get($breakpoints, xl); // Get the xlarge breakpoint.

$breakpoint: map-get($breakpoints, xxl); // Get the extra extra large breakpoint.


@mixin respond-above($breakpoint) { 
  

    @if map-has-key($breakpoints, $breakpoint) {
  
      $breakpoint-value: map-get($breakpoints, $breakpoint);
  
      @media (min-width: $breakpoint-value) {
        @content;
      }
  
    } @else {
  
  
      @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
  }

  @include respond-above(sm) {
    
    .card {
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 0 20px;
      margin: 0 10px;
      height: 200px;
      align-items: center;
    }

    .card-icon {
      font-size: 28px;
      width: 50px;
      height: 60px;
      line-height: 60px;
      border-radius: 100%;
      transition: 0.3 linear;
    }
    
    .card:hover .card-icon {
      background: none;
      color: wheat;
      transform: scale(1);
    }
    
    .card p{
      margin-top: 20px;
      font-weight: 500;
      letter-spacing: 2px;
      max-height: 0;
      opacity: 0;
      transition: 0.3 linear;
    }
    
    .card:hover p{
      max-height: 40px;
      opacity: 1;
    
    }
    
  .footer {
    position: absolute;
    bottom: 0;
    padding:40px 0;
  }

  .footer .social {
    padding-bottom: 25px;
  }

  .social a{
    font-size: 25px;
    width: 30px;
    height: 40px;
    line-height: 40px;
    display: inline-block;
  }

  .social a:hover{
    opacity: 0.9;
  }

  .col ul {
    padding:40px;
    list-style: none;
    font-size: 20px;
    line-height: 2;
  }

  .col ul li a {
    color: inherit;
    text-decoration: none;
  }


  }

@mixin respond-below ($breakpoint){

  @if map-has-key($breakpoints, $breakpoint) {

    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  } @else {

    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@include respond-below(md) {
  .contact-info {
    flex-direction: column;
  }
  
  .card {
    width: 100%;
    max-width: 330px;
    margin: 10px 0;
  }

  .card p{
    margin-top: 20px;
    font-weight: 500;
    letter-spacing: 2px;
    max-height: 0;
}

  .card-icon {
    background: none;
    color: wheat;
  }

  .col {
    display: grid;

  }
  .footer-col {
    flex-direction: column;
    position: relative;
    bottom: 0;
    padding:40px 0;
  }

  .footer .social {
    padding-bottom: 25px;
  }

  .social a{
    font-size: 25px;
    width: 30px;
    height: 40px;
    line-height: 40px;
    display: inline-block;
  }

  .social a:hover{
    opacity: 0.9;
  }

  .col ul {
    padding:40px;
    list-style: none;
    font-size: 20px;
    line-height: 2;
  }

  .col ul li a {
    color: inherit;
    text-decoration: none;
  }


}

@mixin respond-between($lower, $upper) {

    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
  
      $lower-breakpoint: map-get($breakpoints, $lower);
      $upper-breakpoint: map-get($breakpoints, $upper);
  
      @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
        @content;
      }
    
    } @else {
  
      @if (map-has-key($breakpoints, $lower) == false) {
  
        @warn 'Your lower breakpoint was invalid: #{$lower}.';
      }
  
      @if (map-has-key($breakpoints, $upper) == false) {
  
        @warn 'Your upper breakpoint was invalid: #{$upper}.';
      }
    }
  }

  @include respond-between(sm, xxl) {
   
    
    }
  
  
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: wheat;
  min-height: 100vh;
  display: block;
}

.contact-info {
  display: flex;
  width: 100%;
  max-width: 1200px;
  align-items: center;
  justify-content: center;
  padding: 0 20px;
}

.card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 20px;
  margin: 0 10px;
  width: calc(33% - 20px);
  height: 200px;
  align-items: center;
}
